
scope: {{ cluster_name }}
namespace: /db2/
name: {{ hostvars[inventory_hostname]['ansible_facts']['hostname'] }}

restapi:
    listen:  {{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}:8008
    connect_address:  {{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}:8008

etcd:
    hosts: {{ groups['etcd'] | map('extract', hostvars, ['ansible_default_ipv4', 'address']) | map('regex_replace', '^(.*)$', '\\1:2379') | join(',')  }}

bootstrap:
    dcs:
        ttl: 30
        loop_wait: 10
        retry_timeout: 10
        maximum_lag_on_failover: 1048576

    initdb:
    - encoding: UTF8
    - data-checksums

    pg_hba:
    - host replication replicator 127.0.0.1/32 md5
{% for host in groups['postgres'] %}
    - host replication postgres {{ hostvars[host]['ansible_default_ipv4']['address'] }}/32 md5
{% endfor %}
    - host all all 0.0.0.0/0 md5

    users:
        admin:
            password: admin
            options:
                - createrole
                - createdb

postgresql:
    listen: {{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}:5432
    connect_address: {{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}:5432
    data_dir: /mnt/patroni
    pgpass: /tmp/pgpass
    bin_dir: /usr/lib/postgresql/12/bin/
    authentication:
        replication:
            username: postgres
            password: postgres
        superuser:
            username: postgres
            password: postgres
    parameters:
        unix_socket_directories: '.'

tags:
    nofailover: false
    noloadbalance: false
    clonefrom: false
    nosync: false